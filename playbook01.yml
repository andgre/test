---
- name: Beginning
  hosts: localhost
  gather_facts: False
  tasks:
    - name: Check VAR aws_access_key_id
      debug:
        msg: "{{ aws_access_key_id }}"
    - name: Check VAR aws_secret_access_key
      debug:
        msg: "{{ aws_secret_access_key }}"
    - name: create AWS DEV instance
      ec2:
        instance_type: t2.micro
        image: ami-08962a4068733a2b6
        region: us-east-2
        group: default
        key_name: Mykey19012021-1
        wait: true
        count: 1
        vpc_subnet_id: subnet-9ec182d2
        assign_public_ip: yes
      register: ec2
    - name: Add new dev instances to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: dev
        ansible_ssh_private_key_file: 'Mykey19012021-1.pem'
        ansible_ssh_user: "ubuntu"
        dev_ids: "{{ item.id }}"
      loop: "{{ ec2.instances }}"
      register: devvars
    - name: Check VAR dev_ids
      debug:
        msg: "{{ devvars.results.0.add_host.host_vars.dev_ids }}"
    - name: create AWS PROD instance
      ec2:
        instance_type: t2.micro
        image: ami-042e8287309f5df03
        region: us-east-1
        group: default
        key_name: Mykey04032021-1
        wait: true
        count: 1
        vpc_subnet_id:  subnet-702d4a51
        assign_public_ip: yes
      register: ec2
    - name: Add new prod instances to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: prod
        ansible_ssh_private_key_file: 'Mykey04032021-1.pem'
        ansible_ssh_user: "ubuntu"
      loop: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      wait_for_connection:
        delay: 60
        timeout: 300

- name: install Dev enviroment
  hosts: dev
  become: yes
  tasks:
    - name: Ensure Dev-apps are present
      apt:
        pkg:
          - maven
          - git
          - awscli
        update_cache: yes
        state: latest
    - name: git clone java app
      git:
        repo: https://github.com/andgre/boxfuse11.git
        dest: /opt/myapp
    - name: build app
      command: "mvn war:war"
      args:
        chdir: "/opt/myapp/"
    - name: Push the artifact to s3
      command: "{{ item }} chdir=/opt/myapp/target"
      with_items:
        - aws s3 cp hello-1.0.war s3://mybacket10.test101.com
      environment:
        - AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
        - AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"

- name: Terminate dev instances
  hosts: localhost
  gather_facts: False
  tasks:
    - name: Terminate dev instances
      ec2:
        state: 'absent'
        instance_ids: "{{ devvars.results.0.add_host.host_vars.dev_ids }}"
        region: us-east-2

- name: install Prod enviroment
  hosts: prod
  become: yes
  tasks:
    - name: Ensure Prod-apps are present
      apt:
        pkg:
          - tomcat9
          - awscli
        update_cache: yes
        state: latest
    - name: Ensure tomcat is started
      service:
        name: tomcat9
        state: started
    - name: Pull the artifact from s3
      command: "{{ item }} chdir=/var/lib/tomcat9/webapps/"
      with_items:
        - aws s3 cp  s3://mybacket10.test101.com/hello-1.0.war hello-1.0.war
      environment:
        - AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
        - AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"


